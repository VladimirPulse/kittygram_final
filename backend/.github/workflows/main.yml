# name: Main Kittygram workflow

# on:
#   push:
#     branches:
#       - main

# jobs:
#   tests:
#     runs-on: ubuntu-latest
#     services:
#       postgres:
#         image: postgres:13
#         env:
#           POSTGRES_USER: kittygram_user
#           POSTGRES_PASSWORD: kittygram_password
#           POSTGRES_DB: kittygram
#         ports:
#           - 5432:5432
#         options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up Python
#       uses: actions/setup-python@v4
#       with:
#         python-version: 3.9

#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip 
#         pip install flake8==6.0.0 flake8-isort==6.0.0
#         pip install -r ./backend/requirements.txt 
#     - name: Test with flake8 and django tests
#       env:
#         POSTGRES_USER: kittygram_user
#         POSTGRES_PASSWORD: kittygram_password
#         POSTGRES_DB: kittygram
#         DB_HOST: 127.0.0.1
#         DB_PORT: 5432
#       run: |
#         python -m flake8 backend/
#         cd backend/
#         python manage.py test

# Файл main.yml
# Имя workflow
name: Main Kitty Workflow
# Перечень событий-триггеров, при которых должен запускаться workflow
on:
  # Событие push возникает,
  # когда изменения исходного кода приходят на сервер GitHub
  push:
    # Отслеживаем изменения только в ветке main
    branches:
      - main
# Перечень задач
jobs:
  # Единственная задача — склонировать код 
  # и вывести в консоль дерево файлов
  checkout-and-print-tree:
    runs-on: ubuntu-latest
    steps:
      # На GitHub Actions есть готовые описания шагов, 
      # их можно использовать в своих workflow.
      # Применим готовое описание шага для получения исходного кода
      - name: Check out repository code  # Имя шага задаём сами
        uses: actions/checkout@v3  # Берём готовое решение из библиотеки GitHub Actions
      # Выполняем команду tree в текущей директории
      - name: Print project tree
        run: tree .
 